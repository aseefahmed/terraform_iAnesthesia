# output "cluster_id" {
#   description = "EKS cluster ID."
#   value       = module.eks.cluster_id
# }

# output "cluster_endpoint" {
#   description = "Endpoint for EKS control plane."
#   value       = module.eks.cluster_endpoint
# }

# output "cluster_security_group_id" {
#   description = "Security group ids attached to the cluster control plane."
#   value       = module.eks.cluster_security_group_id
# }

# output "kubectl_config" {
#   description = "kubectl config as generated by the module."
#   value       = module.eks.kubeconfig
# }

# output "config_map_aws_auth" {
#   description = "A kubernetes configuration to authenticate to this EKS cluster."
#   value       = module.eks.config_map_aws_auth
# }

# output "region" {
#   description = "AWS region"
#   value       = var.region
# }

# output "cluster_name" {
#   description = "Kubernetes Cluster Name"
#   value       = local.cluster_name
# }

# output "rds_hostname" {
#   description = "RDS instance hostname"
#   value       = aws_db_instance.rds.address
#   sensitive   = true
# }

# output "rds_port" {
#   description = "RDS instance port"
#   value       = aws_db_instance.rds.port
#   sensitive   = true
# }

# output "rds_username" {
#   description = "RDS instance root username"
#   value       = aws_db_instance.rds.username
#   sensitive   = true
# }

# output "gitlab_runner" {
#   description = "Gitlab Runner"
#   value       = aws_instance.gitlab_runner.public_ip
# }

output "public_subnets" {
  description = "Public Subnets"
  value = module.vpc.public_subnets
}
# output "load_balancer_ingress" {
#   value = kubernetes_ingress.ingress_service[0]
#   #value = kubernetes_ingress.ingress_service
# }

output "eventbridge" {
  value = module.eventbridge.eventbridge_rule_arns.crons
}